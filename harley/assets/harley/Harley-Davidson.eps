%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 193 193 
%%LanguageLevel: 2
%%Creator: CorelDRAW 11
%%Title: 1.eps
%%CreationDate: Sun Dec 15 10:39:51 2002
%%For: ldn
%%DocumentProcessColors: Black 
%%DocumentCustomColors: (PANTONE 165 CV)
%%+ (Custom Color 2)
%%CMYKCustomColor: 0 0.6 1 0 (PANTONE 165 CV)
%%+ 0 0 0 0 (Custom Color 2)
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 2 def
/CMYKMarks true def
/UseLevel 2 def
%Build: CorelDRAW 11 Version 11.633
%Color profile: Disabled
/CorelIsEPS true def
%%BeginResource: procset wCorel11Dict 11.0 0
/wCorel11Dict 300 dict def wCorel11Dict begin
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge
{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch
rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll
eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1
exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}
repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1
roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index
.114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb
/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray
ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor
get def/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict
/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor
sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop
/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where{pop
/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld
}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{
pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse
/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where
{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1
roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse
SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage
where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi
true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop
daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs
{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors
dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255
div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul
cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{
4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div
$dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3
add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat
0 $dat length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse
/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$fil 4 eq
{CorelShfillDoFill}{$t $c $m $y $k $n $o @scc_5{wfill}{@np}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{
matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M $Y $K
$N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}{@np}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{
5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{
/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{
@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{
@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq{/$ink_5 -1 def}
{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5(Magenta)eq{/$ink_5 1
def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{CurrentInkName_5(Black)eq
{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}ifelse}ifelse}bd/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg false def}
ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true def}{@gs $t $c $m $y $k $n $o
@scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd/$pyf xd/$pxf xd/$pn xd}bd
/CorelPtrnDoFill{@gs $ctm setmatrix $pm concat CorelPtrnSetBBox wclip @sv Bburx
Bbury $pm itransform/$tury xd/$turx xd Bbllx Bblly $pm itransform/$tlly xd
/$tllx xd newpath $tllx $tlly m $tllx $tury l $turx $tury l $turx $tlly l $tllx
$tlly m @cp pathbbox @rs/$tury xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx
sub def/$hei $tury $tlly sub def @gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{
$t $c $m $y $k $n $o @scc_5{SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei
scale <00> 8 1 false[8 0 0 1 0 0]{}imagemask}{/$bkg true def}ifelse}if}ifelse
@gr $wid 0 gt $hei 0 gt and{$pn cvlit load aload pop/$pd xd 3 -1 roll sub
/$phei xd exch sub/$pwid xd $wid $pwid div ceiling 1 add/$tlx xd $hei $phei div
ceiling 1 add/$tly xd currentdict/CorelPtrnL2Pattern known $psy 0 eq and $psx 0
eq and{CorelPtrnL2Pattern}{$psx 0 eq{CorelPtrnTileVeritcal}{CorelPtrnTileHoriz
}ifelse}ifelse}if @gr @np/$bkg false def}bd/CorelPtrnSetBBox{pathbbox/$ury xd
/$urx xd/$lly xd/$llx xd}bd/CorelPtrnSetFirstTile{$tllx $pxf add dup $tllx gt
{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei add}if/$ty xd}bd/p{/$pm
xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}bd/CorelPtrnDraw{@ep}bd
/CorelPtrnPutTile{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei
sub $ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{
/$in false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0
$phei rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3
index sub Tl matrix currentmatrix/$ctm xd CorelPtrnDraw pop pop pop pop}{pop
pop}ifelse @rs}bd/CorelPtrnTileHoriz{CorelPtrnSetFirstTile 0 1 $tly 1 sub{dup
$psx mul $tx add{dup $llx gt{$pwid sub}{exit}ifelse}loop exch $phei mul $ty
exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1 roll add exch CorelPtrnPutTile
pop}for pop pop}for}bd/CorelPtrnTileVeritcal{CorelPtrnSetFirstTile 0 1 $tlx 1
sub{dup $pwid mul $tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}
{exit}ifelse}loop 0 1 $tly 1 sub{$phei mul 3 copy sub CorelPtrnPutTile pop}for
pop pop}for}bd L2? UseLevel 2 ge and{/CorelPtrnL2Pattern{@sv[$pn cvlit load
aload pop pop]$pwid $phei $pn cvlit load aload pop pop pop pop pathbbox pop pop
2 index sub exch 3 index sub 4 -2 roll pop pop exch matrix identmatrix
translate/PatternMatrix xd/PatternYStep xd/PatternXStep xd/PatternBBox xd
currentdict/PatternMainDict xd <</PaintType 1/PatternType 1/TilingType 1/BBox
PatternBBox/XStep PatternXStep/YStep PatternYStep/PaintProc{begin
PatternMainDict begin $ctm currentmatrix pop 0 CorelPtrnDraw end end}bind >>
PatternMatrix makepattern setpattern fill @rs}def}if
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel11Dict begin
@BeginSysCorelDict
@ssa
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
0.00000 0.00000 192.75591 192.75591 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
0.00000 192.75591 m
192.75591 192.75591 L
192.75591 0.00000 L
0.00000 0.00000 L
0.00000 192.75591 L
@c
F

@rax %Note: Object
8.50394 27.69137 184.25197 165.06482 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
98.10113 164.14781 m
105.21808 158.62791 114.03354 154.22712 124.29666 151.06394 c
133.21871 148.31745 143.24145 146.49647 154.10126 145.65231 c
155.94746 145.50661 l
155.94746 122.13893 l
184.25197 122.13893 l
184.25197 71.36192 l
166.85348 71.36192 l
165.14419 69.62258 l
160.88428 65.84343 l
141.76318 48.86901 115.16910 28.47118 97.06365 27.69137 c
96.99080 27.69137 l
96.91313 27.69137 l
83.02507 28.15427 59.59672 41.96551 32.64293 65.58973 c
28.55906 69.16819 l
26.46737 71.34973 l
8.50394 71.34973 l
8.50394 122.13893 l
37.41194 122.13893 l
37.41194 145.54063 l
39.28876 145.63049 l
62.18164 146.70170 79.58013 152.42315 95.70557 164.18183 c
96.91313 165.06482 l
98.10113 164.14781 l
@c
F

@rax %Note: Object
10.49613 29.68356 182.25978 162.57090 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
96.87912 162.57090 m
112.51616 150.44683 133.76665 145.23194 153.94706 143.66381 c
153.94706 127.12280 l
149.66986 127.34504 146.20309 122.86290 146.19458 120.14192 c
182.25978 120.14674 l
182.25978 73.35524 l
148.82088 73.35524 l
149.61402 69.02249 155.39981 67.11165 159.56022 67.33389 c
137.33178 47.60079 112.82485 30.36501 96.97748 29.68356 c
82.53666 30.16346 58.12668 45.90737 33.95367 67.08983 c
43.97754 66.92712 44.86450 73.35893 44.86450 73.35893 c
10.49613 73.33342 l
10.49613 120.14674 l
46.44964 120.14674 l
46.26992 123.56986 43.12857 126.75855 39.38343 127.12280 c
39.38343 143.63830 l
60.81364 144.64035 79.33465 149.77871 96.87912 162.57090 c
@c
F

@rax %Note: Object
43.75899 120.14192 149.78154 157.35969 @E
 0 O 0 @g
0.00 0.60 1.00 0.00 (PANTONE 165 CV) 1.00 x
/$fm 0 def
149.78154 140.06806 m
149.77672 137.12003 149.77672 133.07017 149.78154 129.71991 c
145.83487 128.90126 141.84935 123.54066 141.85786 120.14192 c
139.57313 120.14674 138.60992 120.14192 138.60992 120.14192 c
138.92683 126.60775 142.51266 129.74910 146.55033 131.89181 c
146.55033 133.93134 146.55033 135.04167 146.57102 137.04350 c
129.36217 137.46756 109.45644 144.85918 97.00299 153.27099 c
85.67320 145.63899 64.35354 137.47946 46.97320 137.04350 c
46.96838 135.91134 46.96838 133.65808 46.97320 131.88813 c
51.51515 129.57420 54.18000 125.04813 54.45950 120.14674 c
52.69323 120.14674 51.99959 120.14674 51.04006 120.14674 c
50.30277 125.26299 47.37515 128.00466 43.77969 130.01499 c
43.77969 133.28504 43.77969 136.47260 43.75899 139.86652 c
63.41074 140.97685 85.45096 148.57852 96.78557 157.35969 c
107.64397 148.42913 130.47109 141.54293 149.78154 140.06806 c
@c
F

@rax %Note: Object
58.47420 120.13540 135.48104 148.53600 @E
 0 O 0 @g
0.00 0.60 1.00 0.00 (PANTONE 165 CV) 1.00 x
/$fm 0 def
131.14403 131.48986 m
131.53039 130.99663 131.85581 128.27934 130.47959 128.30117 C
128.76576 128.40435 128.14016 128.42504 125.69357 128.54891 C
125.66806 132.51742 L
127.72091 132.28668 130.83194 131.88813 131.14403 131.48986 c
@c
134.23805 134.05153 m
136.13669 131.96466 135.69080 126.53490 134.04983 125.96995 C
135.78917 124.66658 135.41272 120.14192 135.41272 120.14192 C
131.68828 120.14192 L
131.67978 124.66658 130.80643 124.73943 128.62828 124.73603 C
127.04797 124.76494 127.51937 124.73943 125.64255 124.73093 C
125.64255 120.14192 L
121.87559 120.14192 L
121.87559 137.27906 L
127.07348 136.14690 133.21389 135.17887 134.23805 134.05153 c
@c
114.88620 134.34321 m
114.88989 130.44387 114.88989 129.07616 114.88139 125.43449 C
114.88989 123.66822 113.22312 123.93411 112.07906 123.93411 C
110.43411 123.93043 108.91219 123.64271 108.91701 126.57373 C
108.91701 126.57373 108.90369 132.23934 108.90850 135.65877 C
108.91219 137.66910 110.13420 137.34227 111.96709 136.80794 C
113.13808 136.46409 114.88989 136.44709 114.88620 134.34321 c
@c
85.03058 124.82079 m
85.02576 124.14444 84.70006 123.95594 84.22894 123.93893 C
83.19997 123.89159 81.36709 123.93043 80.11956 123.92561 C
79.34797 123.92079 79.03474 124.63739 79.02624 125.25817 C
78.99704 128.01798 78.75298 134.58359 79.75134 135.59443 C
80.07704 135.92835 85.02576 138.77802 85.03058 136.43490 C
85.03058 136.43490 85.03427 125.55468 85.03058 124.82079 c
@c
68.88813 120.14674 m
68.88813 122.32346 68.98649 125.96145 68.46775 126.57005 C
67.39285 124.61556 66.46706 122.20328 65.56706 120.39080 C
64.64976 122.22397 63.70724 124.36668 62.54107 125.87159 C
62.42088 120.14192 L
58.47420 120.14674 L
58.47420 134.54844 L
60.61691 134.92998 61.25584 135.09751 62.36986 135.29906 C
65.46869 128.60107 L
68.72542 136.57096 L
69.78331 136.87115 69.73228 136.87115 72.78236 137.49647 C
72.78236 120.14674 L
68.88813 120.14674 l
@c
88.80123 138.18643 m
88.81455 131.88813 88.79272 125.92261 88.80123 123.50183 C
88.76353 120.09430 87.60586 120.18076 81.80787 120.14192 C
77.04255 120.10791 75.48633 120.03477 75.43191 124.81739 C
75.43191 134.85713 L
75.51326 138.66265 76.50680 138.46592 80.82283 140.61713 C
87.56702 143.89455 88.61272 142.79754 88.80123 138.18643 c
@c
118.70391 136.02671 m
118.70391 133.83298 118.70391 123.93043 118.70391 123.93043 C
118.70391 120.14674 117.35802 120.14674 112.09606 120.14192 C
107.12154 120.14674 104.92668 120.14674 104.92668 123.93043 C
104.92668 123.93043 104.92299 134.88378 104.92668 138.95433 C
104.92668 144.41811 109.34929 142.07868 112.70948 140.74611 C
115.88825 139.48498 118.70391 138.96283 118.70391 136.02671 c
@c
104.52444 144.41329 m
104.49411 140.02923 L
98.94047 142.76013 L
98.94047 120.14192 L
94.59893 120.14192 L
94.59043 127.55537 94.59893 142.76013 94.59893 142.76013 C
89.19099 140.08167 L
89.22132 144.38409 L
89.22132 144.38409 95.33622 147.53395 96.68211 148.53600 C
98.12665 147.48151 104.52444 144.41329 104.52444 144.41329 c
@c
F

@rax %Note: Object
14.87140 77.90570 178.07272 115.75786 @E
 0 O 0 @g
0.00 0.60 1.00 0.00 (PANTONE 165 CV) 1.00 x
/$fm 0 def
14.87140 115.75786 m
178.07272 115.75786 l
178.07272 77.90570 l
14.87140 77.90570 l
14.87140 115.75786 l
@c
F

@rax %Note: Object
18.45865 80.88435 174.88885 112.56066 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
18.45865 112.56066 m
174.88885 112.56066 l
174.88885 80.88435 l
18.45865 80.88435 l
18.45865 112.56066 l
@c
F

@rax %Note: Object
23.24098 84.27827 170.29956 109.38529 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 (Custom Color 2) 1.00 x
/$fm 0 def
158.54457 104.25203 m
158.54825 101.97666 158.54457 88.91121 158.54457 88.91121 C
158.54457 86.40765 156.11528 84.23093 153.62986 84.27827 C
151.55518 84.31228 148.96658 85.43594 148.97140 88.96224 C
148.97509 92.35984 148.96658 97.91348 148.97140 104.34189 C
148.96658 108.94819 151.90611 109.37310 153.95046 109.38529 C
155.81509 109.40230 158.54457 108.67465 158.54457 104.25203 c
@c
147.58668 105.08769 m
147.58668 100.41222 L
144.01276 100.43405 L
144.00935 103.36876 144.00935 105.28923 142.59883 105.19455 C
141.39524 105.18605 141.59197 103.79395 141.58715 102.73124 C
141.59197 99.60690 143.19893 99.02863 144.83650 97.80661 C
147.02173 96.17046 147.77121 95.12447 147.79672 90.49153 C
147.79672 87.10243 146.64898 84.46280 142.93786 84.46280 C
138.57931 84.46280 137.97921 86.43317 137.98772 93.86476 C
138.55380 93.85625 140.84617 93.85625 141.59679 93.85143 C
141.59197 92.63424 141.59197 90.86457 141.58715 90.22195 C
141.59197 89.51839 141.46809 88.09257 142.94636 88.08406 C
143.84154 88.07896 144.18425 88.82504 144.18425 90.94224 C
144.18425 93.35452 143.47729 94.10060 142.66687 94.71260 C
141.06954 95.92129 138.03024 97.11666 138.03534 100.83260 C
138.03024 104.19250 137.50809 109.27474 142.98520 109.21408 C
146.22860 109.18857 147.59150 107.38460 147.58668 105.08769 c
@c
26.81461 99.46970 m
29.41540 99.46970 L
29.41540 108.58847 L
32.99046 108.58847 L
32.99046 84.66435 L
29.38989 84.66435 L
29.38989 94.65676 L
28.40854 94.65307 27.91162 94.65307 26.83672 94.65676 C
26.84013 84.68986 L
23.24098 84.68986 L
23.24098 108.61398 L
26.81461 108.61398 L
26.81461 99.46970 l
@c
41.94170 108.58847 m
42.88082 100.85301 43.70315 93.08013 44.56431 84.68986 C
41.24324 84.68986 L
40.96517 86.80592 40.69049 89.04728 40.50595 90.41868 C
38.04605 90.41868 L
37.37792 84.66435 L
33.97918 84.66435 L
34.81143 92.53587 35.65928 100.40372 36.43058 108.58847 C
41.94170 108.58847 l
@c
51.60132 108.60180 m
55.08510 108.60180 55.48365 104.51310 55.47855 101.99735 C
55.47855 100.85301 55.56019 98.71172 53.69187 96.83858 C
54.86655 95.78409 55.48365 94.94844 55.50917 92.33433 C
55.50917 89.84523 55.50917 87.72803 55.50066 84.66435 C
53.17313 84.66435 L
52.74567 84.68986 51.72520 85.01074 51.73370 85.70920 C
51.72038 87.21780 51.72520 90.44050 51.73002 92.22746 C
51.72520 93.70573 50.85043 93.85625 50.01477 93.85994 C
49.37698 93.85994 L
49.37698 84.66435 L
45.50683 84.66435 L
45.55928 108.58847 L
47.11408 108.60180 47.61581 108.60180 51.60132 108.60180 c
@c
60.70677 88.68416 m
62.01014 88.67565 62.98214 88.67565 64.27701 88.68416 C
64.27701 84.68986 L
56.88425 84.68986 L
56.88425 108.58847 L
60.70677 108.58847 L
60.70677 88.68416 l
@c
72.48359 104.82180 m
68.86630 104.82180 L
68.86630 99.24236 L
70.30573 99.23386 71.20205 99.23386 72.45694 99.24236 C
72.45694 95.05531 L
68.86630 95.05531 L
68.86630 88.70939 L
70.20737 88.69606 71.07704 88.69606 72.43143 88.70939 C
72.43143 84.68986 L
65.06901 84.68986 L
65.06901 108.58847 L
72.48359 108.58847 L
72.48359 104.82180 l
@c
76.63550 108.60180 m
77.10690 106.06082 77.52728 103.57058 78.28526 100.78526 C
79.09909 103.59241 79.29694 105.93553 80.09405 108.58847 C
83.61666 108.58847 L
82.63502 103.54507 81.31465 99.18652 80.03310 94.50255 C
80.04643 90.66756 80.04643 88.59770 80.04643 84.88687 C
76.44728 84.88687 L
76.45946 88.82504 76.43395 91.58854 76.43877 94.57540 C
75.23858 99.28488 73.87569 103.87899 72.90765 108.58847 C
74.66400 108.60180 75.48633 108.60180 76.63550 108.60180 c
@c
97.41458 108.60180 m
99.27439 108.60180 100.56926 107.28142 100.57294 104.48759 C
100.56926 99.41017 100.59477 93.25616 100.60328 88.93672 C
100.58145 86.98224 99.24888 84.68986 96.31417 84.69836 C
95.01562 84.68986 93.25786 84.68986 91.17950 84.68986 C
91.17950 108.58847 L
93.94413 108.60180 94.98898 108.60180 97.41458 108.60180 c
@c
112.10457 84.88687 m
108.73247 84.88687 L
108.33392 86.81953 108.14088 88.69606 107.81518 90.66756 C
106.84715 90.66756 106.02340 90.66756 105.26173 90.66756 C
104.55846 84.88687 L
101.14271 84.88687 L
101.83748 92.79694 103.20038 100.91764 103.99720 108.79030 C
109.13074 108.79030 L
112.10457 84.88687 l
@c
114.70649 108.79030 m
115.13877 104.14006 115.61499 99.25937 116.12041 94.63124 C
116.12041 94.63124 117.28148 104.61628 117.85606 108.79030 C
121.40447 108.79030 L
118.07858 84.88687 L
114.26060 84.88687 L
111.08523 108.79030 L
114.70649 108.79030 l
@c
125.68025 84.86135 m
122.06750 84.86135 L
122.06750 108.79030 L
125.66806 108.79030 L
125.68025 84.86135 l
@c
132.92731 108.79030 m
134.74460 108.78520 136.80964 107.72731 136.80113 104.56894 C
136.80113 88.76551 L
136.80964 86.18910 135.25342 84.86135 132.20334 84.86504 C
130.48441 84.86135 128.53474 84.86135 127.24980 84.86135 C
127.24980 108.79030 L
128.76576 108.78520 130.88296 108.78520 132.92731 108.79030 c
@c
164.53077 108.79030 m
165.31909 105.13871 166.05298 101.40208 166.84980 97.82844 C
166.69928 108.79030 L
170.29956 108.79030 L
170.29956 85.07509 L
166.07849 85.07509 L
165.26806 89.53200 164.49676 93.71906 163.61376 98.20517 C
163.72545 85.07509 L
159.94176 85.07509 L
159.94176 108.79030 L
164.53077 108.79030 l
@c
154.89808 104.19619 m
154.89326 102.82110 154.89326 95.12447 154.89808 89.63036 C
154.89326 87.35499 152.37751 87.92476 152.38233 89.97761 C
152.37751 95.42466 152.34831 101.13619 152.36901 104.19619 C
152.37751 105.83348 154.90658 105.78983 154.89808 104.19619 c
@c
96.93128 103.82797 m
96.93128 102.89764 96.95679 92.75811 96.96898 89.82340 C
96.95679 89.17228 96.58375 88.72157 96.08712 88.70457 C
95.28888 88.69606 95.33622 88.69606 94.80076 88.70939 C
94.79707 104.97231 L
94.79707 104.97231 96.93128 105.46072 96.93128 103.82797 c
@c
133.43272 103.71146 m
133.44973 99.60690 133.42904 89.87443 133.42904 89.87443 C
133.42422 88.79953 133.17506 88.69606 131.05899 88.70939 C
131.05899 104.99783 L
131.05899 104.99783 131.58992 104.98450 132.23254 104.99783 C
132.77679 104.98932 133.42422 104.41474 133.43272 103.71146 c
@c
51.55767 103.45861 m
51.55398 102.43474 51.57581 100.78016 51.54066 99.68343 C
51.54917 98.73723 51.12510 98.46255 50.76057 98.45405 C
49.35146 98.45405 L
49.35146 104.80110 L
50.75206 104.78778 51.54917 104.78778 51.55767 103.45861 c
@c
107.29276 95.10265 m
105.68098 95.10265 L
106.47780 103.66044 L
106.94551 101.27820 107.16775 97.44208 107.29276 95.10265 c
@c
40.00054 95.10265 m
38.61213 95.10265 L
39.03619 103.73329 L
39.54132 100.65260 39.74315 98.13713 40.00054 95.10265 c
@c
83.02025 98.02998 m
89.59805 98.02998 L
89.59805 95.05531 L
83.02025 95.05531 L
83.02025 98.02998 l
@c
F

@rax %Note: Object
43.35194 34.25584 150.26513 73.35893 @E
 0 O 0 @g
0.00 0.60 1.00 0.00 (PANTONE 165 CV) 1.00 x
/$fm 0 def
53.29332 73.35893 m
53.24230 69.42076 51.54917 66.63175 49.07707 64.55707 c
65.00098 50.29143 86.52217 38.13449 97.10249 37.43093 c
107.84069 38.13449 128.76576 51.08825 144.75515 64.65543 c
141.54463 67.47619 140.62394 69.91767 140.61543 73.35893 c
142.14104 73.35524 142.78734 73.35524 143.78570 73.35043 c
144.06038 69.21921 148.44416 65.88113 150.26513 65.10132 c
126.77357 45.70583 111.92939 36.24066 96.87912 34.25584 c
81.24180 36.44107 66.09770 45.80532 43.35194 64.92643 c
46.51880 66.33184 49.70636 69.61776 49.69786 73.35893 c
53.29332 73.35893 l
@c
F

@rax %Note: Object
57.69921 40.64825 136.99786 73.36205 @E
 0 O 0 @g
0.00 0.60 1.00 0.00 (PANTONE 165 CV) 1.00 x
/$fm 0 def
111.33298 56.22293 m
110.38195 55.87058 109.76117 55.69569 108.50995 55.42980 C
108.50995 55.42980 109.66649 65.01628 110.02252 65.05030 C
110.38195 65.08431 111.33298 56.22293 111.33298 56.22293 c
@c
99.70809 69.91398 m
100.32038 69.91767 100.74416 69.54605 100.73565 68.59843 C
100.74416 66.30633 100.74416 62.02063 100.74926 59.37619 C
100.74416 58.40816 100.22202 57.91124 97.95515 57.76072 C
97.95515 69.91398 L
99.70809 69.91398 l
@c
73.46041 68.61061 m
73.45531 64.26198 73.45531 60.97493 73.45531 56.95058 C
73.45531 54.83452 72.04139 55.81587 71.55808 56.15008 C
71.16321 56.41483 69.86948 56.81310 69.86948 58.32198 C
69.86098 61.21531 69.86948 66.29301 69.87317 68.78324 C
69.87317 69.78161 70.97868 69.90917 71.40728 69.91398 C
72.67181 69.91767 73.45531 70.10220 73.46041 68.61061 c
@c
64.49556 73.35893 m
65.08233 73.35524 65.27537 73.10636 65.27055 72.55361 C
65.27055 72.55361 65.27906 70.80576 65.27537 70.31254 C
65.27537 69.71244 64.81616 69.71726 64.81616 69.71726 C
64.58542 69.71726 61.62406 69.71726 61.10532 69.71726 C
61.10532 68.47824 61.12715 66.57959 61.12233 63.67039 C
61.11383 62.62072 63.39373 61.69890 65.06532 60.51572 C
65.06050 58.66072 65.08715 57.97559 65.08233 56.56054 C
62.61024 57.97559 57.70290 61.27483 57.70772 62.63773 C
57.70290 65.07213 57.70290 68.62394 57.69921 71.17002 C
57.70290 72.33506 58.94561 73.35524 59.96948 73.35893 C
64.49556 73.35893 l
@c
130.43707 73.35893 m
130.98132 71.38743 131.32885 68.32403 131.96268 66.34035 C
133.87833 73.35893 L
134.89398 73.35524 136.03833 73.35524 136.99786 73.35893 C
136.06384 70.41572 134.34605 66.82876 133.43272 64.81474 C
133.42422 63.11764 133.42422 60.64923 133.42904 59.55250 C
132.57609 58.90989 131.32885 57.91124 130.23184 57.16545 C
130.23553 60.13077 130.23553 61.49735 130.24035 63.64006 C
129.13852 66.90529 127.94315 70.23969 126.88044 73.35893 C
127.65175 73.35893 129.46422 73.35524 130.43707 73.35893 c
@c
119.88709 73.35893 m
120.94526 69.61776 122.34217 63.21600 122.34217 63.21600 C
122.64208 63.21600 L
122.64208 73.35893 L
126.04110 73.35893 L
126.04961 67.03030 126.04961 60.77820 126.04110 54.61569 C
124.97811 53.80072 123.98315 53.22246 122.96778 52.62718 C
121.91329 56.04180 121.24148 58.55754 119.93811 62.20063 C
120.03647 50.64236 L
116.48835 48.56031 L
116.48835 73.35893 L
119.88709 73.35893 l
@c
111.88205 73.35893 m
113.47228 64.80964 114.88989 56.64189 116.09858 48.31625 C
115.34060 47.81934 114.26910 47.15008 112.82485 46.62765 C
112.52466 48.67200 112.25027 50.73704 111.93307 52.60535 C
110.45962 52.28476 109.23761 51.95906 107.94387 51.49162 C
107.61846 49.41808 107.14706 46.43093 106.76580 43.71846 C
105.95055 43.31509 105.10271 42.96784 102.75477 42.24019 C
107.96088 73.35893 L
111.88205 73.35893 l
@c
101.41370 73.35893 m
103.75682 73.35524 104.54995 71.52123 104.54513 70.00894 C
104.55846 58.48951 L
104.35691 54.84671 102.86164 54.72255 97.95515 54.16526 C
97.95033 41.14687 L
96.89613 40.39739 96.29235 40.49575 94.16665 41.42154 C
94.16665 73.35893 L
96.75865 73.35893 99.57458 73.35524 101.41370 73.35893 c
@c
81.14343 73.35524 m
82.06044 73.35524 82.26595 72.05187 82.26595 72.05187 C
82.26595 72.05187 84.65272 63.58904 85.50198 60.54236 C
86.89408 65.35871 87.81591 69.04431 88.92142 73.35893 C
92.37118 73.35893 L
92.37118 41.74696 L
88.99058 43.03701 L
88.98576 59.92044 L
88.62123 59.94595 L
87.63987 56.74167 86.68857 53.24797 85.67320 50.12022 C
84.67965 52.94806 83.02507 58.04731 81.92806 61.75474 C
81.61115 61.75474 L
81.61483 56.98942 81.61483 51.83405 81.61115 46.40542 C
80.24343 46.87682 79.64816 47.22775 78.39694 48.09260 C
78.39694 73.35893 L
79.36498 73.36743 80.44498 73.35524 81.14343 73.35524 c
@c
76.85802 70.42422 m
76.85802 70.42791 76.85802 58.47250 76.84951 52.83269 C
76.84951 50.80167 75.74882 50.11654 75.04554 50.20639 C
73.98737 50.34728 73.24157 50.87934 70.71392 52.61017 C
68.18967 54.33647 66.68079 54.83452 66.68079 57.49483 C
66.68079 59.35436 66.68079 67.43735 66.68447 71.21254 C
66.68079 73.41987 69.68494 73.35524 71.60060 73.35893 C
74.98970 73.35524 76.85802 73.47940 76.85802 70.42422 c
@c
F

@rax %Note: Object
156.80891 68.87310 159.67559 71.74346 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
159.11433 71.18702 m
159.35499 70.94665 159.47405 70.65496 159.47405 70.31735 c
159.47405 69.96983 159.35499 69.67843 159.11433 69.43436 c
158.87509 69.19370 158.58369 69.06983 158.23984 69.06983 c
157.89713 69.06983 157.60573 69.19370 157.36649 69.43436 c
157.13065 69.67843 157.01046 69.96983 157.01046 70.31735 c
157.01046 70.65496 157.13065 70.94665 157.37017 71.18702 c
157.61055 71.43137 157.90224 71.55156 158.23984 71.55156 c
158.58369 71.55156 158.87509 71.43137 159.11433 71.18702 c
@c
159.25663 71.32791 m
158.97713 71.60627 158.63953 71.74346 158.23984 71.74346 c
157.84611 71.74346 157.51219 71.60627 157.22901 71.32791 c
156.95093 71.04501 156.80891 70.71080 156.80891 70.31735 c
156.80891 69.91398 156.95093 69.57524 157.22901 69.29688 c
157.50737 69.01398 157.84129 68.87310 158.23984 68.87310 c
158.63953 68.87310 158.97713 69.01398 159.25663 69.29688 c
159.53839 69.58006 159.67559 69.91767 159.67559 70.31735 c
159.67559 70.71080 159.53839 71.04983 159.25663 71.32791 c
@c
158.45471 70.38057 m
158.39405 70.35987 158.30901 70.34655 158.18882 70.34655 c
157.93965 70.34655 l
157.93965 70.91631 l
158.17663 70.91631 l
158.33083 70.91631 158.44139 70.89562 158.51055 70.85679 c
158.58369 70.81795 158.61770 70.74142 158.61770 70.62576 c
158.61770 70.50557 158.56157 70.42422 158.45471 70.38057 c
@c
157.66157 69.53272 m
157.93965 69.53272 l
157.93965 70.15323 l
158.15849 70.15323 l
158.30419 70.15323 158.40737 70.13622 158.46690 70.10220 c
158.56668 70.04296 158.61770 69.92249 158.61770 69.73795 c
158.61770 69.61408 l
158.62110 69.56306 l
158.62110 69.55824 158.62620 69.55455 158.62620 69.54605 c
158.62620 69.54123 158.62961 69.53641 158.62961 69.53272 c
158.89209 69.53272 l
158.87877 69.54973 l
158.87509 69.56306 158.87027 69.59225 158.86545 69.63109 c
158.86176 69.67361 158.86176 69.71244 158.86176 69.75128 c
158.86176 69.86665 l
158.86176 69.94431 158.83625 70.02595 158.77559 70.11071 c
158.72088 70.19235 158.62961 70.24450 158.50573 70.26520 c
158.60409 70.27852 158.67723 70.30403 158.73307 70.33805 c
158.83625 70.40721 158.88728 70.50926 158.88728 70.65128 c
158.88728 70.84828 158.80592 70.98066 158.64321 71.04983 c
158.55307 71.08866 158.40737 71.10567 158.21433 71.10567 c
157.66157 71.10567 l
157.66157 69.53272 l
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel11Dict 11.0 0
%%EOF
